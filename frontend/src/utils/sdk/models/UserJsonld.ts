/* tslint:disable */
/* eslint-disable */
/**
 * Burgieclan API Platform
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserJsonld
 */
export interface UserJsonld {
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly context?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly id?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly type?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly fullName: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly username: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    readonly email?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    favoriteCourses?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    favoriteModules?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    favoritePrograms?: any | null;
    /**
     * 
     * @type {any}
     * @memberof UserJsonld
     */
    favoriteDocuments?: any | null;
}

/**
 * Check if a given object implements the UserJsonld interface.
 */
export function instanceOfUserJsonld(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fullName" in value;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function UserJsonldFromJSON(json: any): UserJsonld {
    return UserJsonldFromJSONTyped(json, false);
}

export function UserJsonldFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserJsonld {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'context': !exists(json, '@context') ? undefined : json['@context'],
        'id': !exists(json, '@id') ? undefined : json['@id'],
        'type': !exists(json, '@type') ? undefined : json['@type'],
        'fullName': json['fullName'],
        'username': json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'favoriteCourses': !exists(json, 'favoriteCourses') ? undefined : json['favoriteCourses'],
        'favoriteModules': !exists(json, 'favoriteModules') ? undefined : json['favoriteModules'],
        'favoritePrograms': !exists(json, 'favoritePrograms') ? undefined : json['favoritePrograms'],
        'favoriteDocuments': !exists(json, 'favoriteDocuments') ? undefined : json['favoriteDocuments'],
    };
}

export function UserJsonldToJSON(value?: UserJsonld | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'favoriteCourses': value.favoriteCourses,
        'favoriteModules': value.favoriteModules,
        'favoritePrograms': value.favoritePrograms,
        'favoriteDocuments': value.favoriteDocuments,
    };
}

