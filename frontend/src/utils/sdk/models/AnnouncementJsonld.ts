/* tslint:disable */
/* eslint-disable */
/**
 * Burgieclan API Platform
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnnouncementJsonld
 */
export interface AnnouncementJsonld {
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    readonly id?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    readonly type?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    readonly context?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    title?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    content?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    creator?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    startTime?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    endTime?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    readonly createdAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AnnouncementJsonld
     */
    readonly updatedAt?: any | null;
}

/**
 * Check if a given object implements the AnnouncementJsonld interface.
 */
export function instanceOfAnnouncementJsonld(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AnnouncementJsonldFromJSON(json: any): AnnouncementJsonld {
    return AnnouncementJsonldFromJSONTyped(json, false);
}

export function AnnouncementJsonldFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnouncementJsonld {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, '@id') ? undefined : json['@id'],
        'type': !exists(json, '@type') ? undefined : json['@type'],
        'context': !exists(json, '@context') ? undefined : json['@context'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'creator': !exists(json, 'creator') ? undefined : json['creator'],
        'startTime': !exists(json, 'startTime') ? undefined : json['startTime'],
        'endTime': !exists(json, 'endTime') ? undefined : json['endTime'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    };
}

export function AnnouncementJsonldToJSON(value?: AnnouncementJsonld | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'content': value.content,
        'creator': value.creator,
        'startTime': value.startTime,
        'endTime': value.endTime,
    };
}

