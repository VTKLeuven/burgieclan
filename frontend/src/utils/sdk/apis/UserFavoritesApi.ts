/* tslint:disable */
/* eslint-disable */
/**
 * Burgieclan API Platform
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UserFavorites,
  UserFavoritesJsonldUserFavorites,
  UserFavoritesUserFavorites,
} from '../models';
import {
    UserFavoritesFromJSON,
    UserFavoritesToJSON,
    UserFavoritesJsonldUserFavoritesFromJSON,
    UserFavoritesJsonldUserFavoritesToJSON,
    UserFavoritesUserFavoritesFromJSON,
    UserFavoritesUserFavoritesToJSON,
} from '../models';

export interface ApiUsersIdfavoritesGetRequest {
    id: any;
}

export interface ApiUsersIdfavoritesaddPatchRequest {
    id: any;
    userFavorites: UserFavorites;
}

export interface ApiUsersIdfavoritesremovePatchRequest {
    id: any;
    userFavorites: UserFavorites;
}

/**
 * 
 */
export class UserFavoritesApi extends runtime.BaseAPI {

    /**
     * Retrieves a User favorites resource.
     * Retrieves a User favorites resource.
     */
    async apiUsersIdfavoritesGetRaw(requestParameters: ApiUsersIdfavoritesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserFavoritesJsonldUserFavorites>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiUsersIdfavoritesGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWT", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/users/{id}/favorites`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFavoritesJsonldUserFavoritesFromJSON(jsonValue));
    }

    /**
     * Retrieves a User favorites resource.
     * Retrieves a User favorites resource.
     */
    async apiUsersIdfavoritesGet(requestParameters: ApiUsersIdfavoritesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserFavoritesJsonldUserFavorites> {
        const response = await this.apiUsersIdfavoritesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates the User favorites resource.
     * Updates the User favorites resource.
     */
    async apiUsersIdfavoritesaddPatchRaw(requestParameters: ApiUsersIdfavoritesaddPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserFavoritesJsonldUserFavorites>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiUsersIdfavoritesaddPatch.');
        }

        if (requestParameters.userFavorites === null || requestParameters.userFavorites === undefined) {
            throw new runtime.RequiredError('userFavorites','Required parameter requestParameters.userFavorites was null or undefined when calling apiUsersIdfavoritesaddPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/merge-patch+json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWT", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/users/{id}/favorites/add`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UserFavoritesToJSON(requestParameters.userFavorites),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFavoritesJsonldUserFavoritesFromJSON(jsonValue));
    }

    /**
     * Updates the User favorites resource.
     * Updates the User favorites resource.
     */
    async apiUsersIdfavoritesaddPatch(requestParameters: ApiUsersIdfavoritesaddPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserFavoritesJsonldUserFavorites> {
        const response = await this.apiUsersIdfavoritesaddPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates the User favorites resource.
     * Updates the User favorites resource.
     */
    async apiUsersIdfavoritesremovePatchRaw(requestParameters: ApiUsersIdfavoritesremovePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserFavoritesJsonldUserFavorites>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiUsersIdfavoritesremovePatch.');
        }

        if (requestParameters.userFavorites === null || requestParameters.userFavorites === undefined) {
            throw new runtime.RequiredError('userFavorites','Required parameter requestParameters.userFavorites was null or undefined when calling apiUsersIdfavoritesremovePatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/merge-patch+json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWT", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/users/{id}/favorites/remove`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UserFavoritesToJSON(requestParameters.userFavorites),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFavoritesJsonldUserFavoritesFromJSON(jsonValue));
    }

    /**
     * Updates the User favorites resource.
     * Updates the User favorites resource.
     */
    async apiUsersIdfavoritesremovePatch(requestParameters: ApiUsersIdfavoritesremovePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserFavoritesJsonldUserFavorites> {
        const response = await this.apiUsersIdfavoritesremovePatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
