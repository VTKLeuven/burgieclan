name: "Deploy to test"

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  git_pull:
    name: Git pull
    runs-on: ubuntu-latest

    steps:
      - name: Install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect and fetch
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git fetch && git reset --hard origin/test"

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: git_pull

    steps:
      - name: Install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Backend - Run composer install
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_BACKEND }} && composer install --no-dev --optimize-autoloader"
      - name: Backend - Update migrations
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_BACKEND }} && bin/console doctrine:migrations:migrate"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_BACKEND }} && bin/console cache:clear --env=prod"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_BACKEND }} && bin/console cache:warmup --env=prod"

  deploy_frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: git_pull

    steps:
      - name: Install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Frontend - Run npm install
        # We run extra commands to solve the issue with nvm not being found
        # https://stackoverflow.com/questions/62863080/github-actions-err-bash-line-3-npm-command-not-found
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_FRONTEND }} && export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh && npm install"
      - name: Frontend - Build NextJS app
        # We run extra commands to solve the issue with nvm not being found
        # https://stackoverflow.com/questions/62863080/github-actions-err-bash-line-3-npm-command-not-found
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_FRONTEND }} && export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh && export NODE_ENV=test && npm run build"
      - name: Frontend - Restart pm2
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR_FRONTEND }} && export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh && pm2 restart ${{ secrets.FRONTEND_PM2_APP_NAME }}"
      - name: Frontend - Restart apache2
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl restart apache2"

  cleanup:
    name: Clean up
    runs-on: ubuntu-latest
    needs:
      - deploy_frontend
      - deploy_backend

    steps:
      - name: Cleanup
        run: rm -rf ~/.ssh
