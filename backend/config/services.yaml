# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|nl

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Doctrine\Extension\DocumentUnderReviewExtension:
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }
              
    App\Doctrine\Extension\AnonymousCreatorSortExtension:
        tags: ['api_platform.doctrine.orm.query_extension.collection']

    App\Doctrine\Extension\AnonymousCreatorFilterExtension:
        tags: ['api_platform.doctrine.orm.query_extension.collection']

    App\Filter\TagFilter:
        tags: ['api_platform.filter']

    Symfony\Component\Security\Http\Logout\LogoutUrlGenerator: '@security.logout_url_generator'

    # Service that listens for a jwt token being created and adds the userId to the jwt
    acme_api.event.authentication_success_listener:
        class: App\EventListener\Api\JWTCreatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    # Service that listens for a failed authentication event (invalid credentials) and sends a custom response
    acme_api.event.authentication_failure_listener:
        class: App\EventListener\Api\AuthenticationFailureListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
    # Service that listens for an invalid JWT event and sends a custom response
    acme_api.event.jwt_invalid_listener:
        class: App\EventListener\Api\JWTInvalidListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }
    # Service that listens for a JWT not found event and sends a custom response
    acme_api.event.jwt_notfound_listener:
        class: App\EventListener\Api\JWTNotFoundListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }
    # Service that listens for a JWT expired event and sends a custom response
    acme_api.event.jwt_expired_listener:
        class: App\EventListener\Api\JWTExpiredListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }