<?php

namespace App\Command;

use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Finder\Finder;
use Symfony\Component\HttpKernel\KernelInterface;

/**
 * Command to delete zip files older than 7 days from the exports directory.
 *
 * Usage:
 * 1. Open a terminal and navigate to the root directory of your Symfony project.
 * 2. Run the command:
 *    - To delete old zip files:
 *      ```sh
 *      php bin/console app:delete-old-zips
 *      ```
 *    - To perform a dry run (only list files that would be deleted):
 *      ```sh
 *      php bin/console app:delete-old-zips --dry-run
 *      ```
 * 3. To schedule the command to run automatically, set up a cron job. For example, to run the command every saturday at
 *    2:00 AM:
 *    - Open the crontab file:
 *    ```sh
 *    crontab -e
 *    ```
 *    - Add the following line to the file:
 *    ```sh
 *    0 2 * * * /path/to/your/project/bin/console app:delete-old-zips
 *    ```
 *    Replace /path/to/your/project with the actual path to your Symfony project.
 **/
#[AsCommand(
    name: 'app:delete-old-zips',
    description: 'Deletes old zips, generated by the export functionality',
)]
final class DeleteOldZipsCommand extends Command
{
    public function __construct(private readonly KernelInterface $kernel)
    {
        parent::__construct();
    }

    protected function configure(): void
    {
        $this->addOption('dry-run', null, InputOption::VALUE_NONE, 'Dry run');
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $io = new SymfonyStyle($input, $output);

        $zipDirectory = sprintf('%s/data/exports', $this->kernel->getProjectDir());
        $filesystem = new Filesystem();
        $finder = new Finder();

        $finder->files()->in($zipDirectory)->name('*.zip')->date('<= now - 7 days');

        foreach ($finder as $file) {
            if ($input->getOption('dry-run')) {
                $io->comment(sprintf('Would delete file: %s', $file->getFilename()));
                continue;
            }
            $io->comment(sprintf('Deleting file: %s', $file->getFilename()));
            $filesystem->remove($file->getRealPath());
        }


        $io->success('Old zips deleted successfully.');

        return Command::SUCCESS;
    }
}
